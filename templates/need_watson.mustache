{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
        <div>
            <img src="{{bigwatsonicon}}" class="watson-btn" alt="{{#str}}watson_logo, theme_moove{{/str}}">
            <div class="count-container hidden" data-region="count-container"></div>
        </div>

        <input type='hidden' id='watsonstatus' value=0></input>
        <div id='mdlwatsondiv' name='mdlwatsondiv'></div>
        <div id='watsonchat' class='watsonchat' name='watsonchat'></div>
        <script>
            var initiateChat = false;
            function initWatson(){
                // Select the button element from the page.
                instance = window.watsonAssistantChatOptions.instance;
                var buttonCheckingInterval = setInterval(function(){
                  if (document.querySelector('div.popover-body > div.footer-section > div > img.watson-btn')){
                    const button = document.querySelector('div.popover-body > div.footer-section > div > img.watson-btn');

	            // Add the event listener to open your web chat.
		    button.addEventListener('click', function clickListener() {
	                instance.openWindow();
	            });

		    // Render the web chat. Nothing appears on the page, because the launcher is
	            // hidden and the web chat window is closed by default.
        	    instance.render().then(function () {
            	        // Now that web chat has been rendered (but is still closed), we make the
	                // custom launcher button visible.
        	        button.style.display = 'block';
	                button.classList.add('open');
                        console.log('on load of watson options for chat look for WAC');
                        const WACRenderDiv = window.document.querySelector('div.WatsonAssistantChatHost > div#WACContainer.WACContainer > div#WACContainer--render');
                        var watsonReport = document.createElement('div');
                        watsonReport.setAttribute('id', 'watsonreport');
                        watsonReport.setAttribute('style', 'background: rgb(51, 51, 51); padding: 0px 5px 3px;  margin: 5px 0 5px 10px; border-radius: 10px; box-shadow: 0 13px 40px 0 rgba(0,0,0,.27);  width: 6em; text-align: center');
 
                        var reportlink = document.createElement('a');
                        reportlink.setAttribute('id', 'watsonreportlink');
                        reportlink.setAttribute('target', '_blank');
                        reportlink.setAttribute('href', 'https://go.yorku.ca/sva1');
                        reportlink.setAttribute('style', 'font-size: .7em;text-decoration: none; color: #fff');

                        reportlink.innerHTML = 'Report an issue';
                        watsonReport.appendChild(reportlink);

                        var observer = new MutationObserver(function (mutations) {
                               console.log($('#WACWidget'));
                               if($("#watsonreport").length > 0 ) {
                                       // do nothing it exists
                               }
                               else {
                                       $('#WACWidget').append(watsonReport);
                                       observer.disconnect();
                               }
                        });

                        const targetNode = window.document.querySelector('div.WatsonAssistantChatHost > div#WACContainer.WACContainer > div#WACContainer--render');
                        observer.observe(targetNode, {
                               childList: true,
                               attributes: true,
                               subtree: true,
                               characterData: true
                       });
        	    });
                    clearInterval(buttonCheckingInterval);
                  }
                }, 500);
            }

window.watsonAssistantChatOptions = {
    integrationID: "54d65981-229d-4b72-82b8-eea994353b13",
    region: "us-south", // The region your integration is hosted in.
    serviceInstanceID: "fea96be6-1def-4780-9dfd-db638e9c9e50", // The ID of your service instance.

   // Config option to hide the default launcher.
    showLauncher: false,
    onLoad: function (instance) {
      window.watsonAssistantChatOptions['instance'] = instance;
    }
};

                if (!initiateChat) {
                    var script = document.createElement('script');
                    var payload = {
                        "context": {
                            "launchpoint": "1",
                            "firstName": "{{firstname}}",
                            "commonName": "{{commonname}}",
                            "studentID": "{{idnumber}}",
                            "isInternational": "{{isinternational}}",
                            "studyLevel": "{{studylevel}}",
                            "language": "{{language}}",
                            "collegeaffiliation": "{{collegeaffiliation}}",
                            "registeredactive": "{{registeredactive}}",
                            "usertype": "{{usertype}}",
                            "subjects": [
                                {{#onesubject}}
                                    {{#subjects}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        }
                                    {{/subjects}}
                                {{/onesubject}}
                                {{#moresubjects}}
                                    {{#subjects}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        },
                                    {{/subjects}}
                                    {{#lastsubject}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        }
                                    {{/lastsubject}}
                                {{/moresubjects}}
                            ],
                            "classes": [
                                {{#courses}}
                                    {
                                        "uniqueId": "{{uniqueid}}",
                                        "id": "{{id}}",
                                        "title": "{{title}}",
                                        "campus": "{{campus}}",
                                        "periodCode": "{{period}}",
                                        "session": "{{session}}",
                                        "faculty": "{{faculty}}"
                                    },
                                {{/courses}}
                                {{#lastcourse}}
                                    {
                                        "uniqueId": "{{uniqueid}}",
                                        "id": "{{id}}",
                                        "title": "{{title}}",
                                        "campus": "{{campus}}",
                                        "periodCode": "{{period}}",
                                        "session": "{{session}}",
                                        "faculty": "{{faculty}}"
                                    }
                                {{/lastcourse}}
                            ],
                            "progfaculty": "{{progfaculty}}"
                        }
                    };
                    var dataPayload = JSON.stringify(payload);
                    script.setAttribute('data-prop-bot-name', 'York V3 Test');
                    script.setAttribute('data-prop-bot-id', '68d2eb2d-4f68-4812-a240-8cc76c6e8dd3'); <!-- TODO: get bot id and name -->
                    script.setAttribute('data-mount-app-id', 'chat');
                    script.setAttribute('data-mount', 'watsonchat');
                    script.setAttribute('data-prop-input-text-size', '13px');
                    script.setAttribute('data-prop-start-open', 'false');
                    script.setAttribute('data-prop-event-callback', 'handleChatChange');
                    script.setAttribute('data-prop-handle-bg', '#09AEEC');
                    script.setAttribute('data-prop-handle-fg', '#000000');
                    script.setAttribute('data-prop-brand-uri', '{{brand}}');
                    script.setAttribute('data-prop-api-key', '{{apikey}}');
                    script.setAttribute('data-prop-username', '{{moodleid}}');
                    script.setAttribute('data-prop-isglendon', '{{isglendon}}');
                    script.setAttribute('data-prop-payload', dataPayload);
                    script.src = "https://web-chat.global.assistant.watson.appdomain.cloud/versions/" + (window.watsonAssistantChatOptions.clientVersion || 'latest') + "/WatsonAssistantChatEntry.js";

                    document.head.appendChild(script);
                    initiateChat = true;

                }
        </script>
{{#js}}
    require(['theme_moove/watson'], function(mod) {
//    mod.init();
    });
{{/js}}
