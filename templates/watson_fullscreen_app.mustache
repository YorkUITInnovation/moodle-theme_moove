
<nav class="navbar fixed-top moove-navbar moove-background-secondary navbar-expand shadow"

     aria-label="{{#str}}sitemenubar, admin{{/str}}">

    <button class="navbar-toggler aabtn d-block d-md-none px-1 my-1 border-0" data-toggler="drawers"
            data-action="toggle" data-target="theme_moove-drawers-primary">
        <span class="navbar-toggler-icon"></span>
    </button>

    <a href="#" class="navbar-brand d-none d-md-flex align-items-center m-0 mr-4 p-0 aabtn">
        {{# output.should_display_logo }}
            <img src="{{output.get_logo}}" class="logo mr-1" alt="{{sitename}}">
        {{/ output.should_display_logo }}
        {{^ output.should_display_logo }}
            {{{ sitename }}}
        {{/ output.should_display_logo }}
    </a>

    <div id="usernavigation" class="navbar-nav ml-auto">

        {{{ output.navbar_plugin_output }}}
        <div class="d-flex align-items-stretch usermenu-container" data-region="usermenu">
            {{#usermenu}}
                {{> core/user_menu }}
            {{/usermenu}}
        </div>
        {{{ output.edit_switch }}}
    </div>
</nav>

<div id="page" class="container-fluid">
    <div id="page-content" class="row">
        <div id="watson_app_page">
            {{$headertext}}
            <!-- watson cal -->
                    <input type='hidden' id='watsonstatus' value=0></input>
                    <div id='mdlwatsondiv' name='mdlwatsondiv'></div>
                    <div id='watsonchat' class='watsonchat' name='watsonchat'></div>
                    <script>
                        var initiateChat = false;

            window.watsonAssistantChatOptions = {
                integrationID: "54d65981-229d-4b72-82b8-eea994353b13", // The ID of this integration.
                region: "us-south", // The region your integration is hosted in.
                serviceInstanceID: "fea96be6-1def-4780-9dfd-db638e9c9e50", // The ID of your service instance.

               // Config option to hide the default launcher.
                showLauncher: false,

               onLoad: function (instance) {
                    // Select the button element from the page.
                    const button = document.querySelector('.watson-btn');

                   // Add the event listener to open your web chat.
                    button.addEventListener('click', function clickListener() {
                        instance.openWindow();
                    });

                   // Render the web chat. Nothing appears on the page, because the launcher is
                    // hidden and the web chat window is closed by default.
                    instance.render().then(function () {
                        // Now that web chat has been rendered (but is still closed), we make the
                        // custom launcher button visible.
                        button.style.display = 'block';
                        button.classList.add('open');
                    });
                }
            };

                if (!initiateChat) {
                    var script = document.createElement('script');
                    var payload = {
                        "context": {
                            "launchpoint": "1",
                            "firstName": "{{firstname}}",
                            "commonName": "{{commonname}}",
                            "studentID": "{{idnumber}}",
                            "isInternational": "{{isinternational}}",
                            "studyLevel": "{{studylevel}}",
                            "language": "{{language}}",
                            "collegeaffiliation": "{{collegeaffiliation}}",
                            "registeredactive": "{{registeredactive}}",
                            "usertype": "{{usertype}}",
                            "subjects": [
                                {{#onesubject}}
                                    {{#subjects}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        }
                                    {{/subjects}}
                                {{/onesubject}}
                                {{#moresubjects}}
                                    {{#subjects}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        },
                                    {{/subjects}}
                                    {{#lastsubject}}
                                        {
                                            "desc": "{{desc}}",
                                            "title1": "{{title1}}",
                                            "subject1": "{{subject1}}",
                                            "unit1": "{{unit1}}",
                                            "subject1facultydesc": "{{subject1facultydesc}}",
                                            "subject1faculty": "{{subject1faculty}}",
                                            "subject1dept": "{{subject1dept}}",
                                            "title2": "{{title2}}",
                                            "subject2": "{{subject2}}",
                                            "unit2": "{{unit2}}",
                                            "subject2facultydesc": "{{subject2facultydesc}}",
                                            "subject2faculty": "{{subject2faculty}}",
                                            "subject2dept": "{{subject2dept}}"
                                        }
                                    {{/lastsubject}}
                                {{/moresubjects}}
                            ],
                            "classes": [
                                {{#courses}}
                                    {
                                        "uniqueId": "{{uniqueid}}",
                                        "id": "{{id}}",
                                        "title": "{{title}}",
                                        "campus": "{{campus}}",
                                        "periodCode": "{{period}}",
                                        "session": "{{session}}",
                                        "faculty": "{{faculty}}"
                                    },
                                {{/courses}}
                                {{#lastcourse}}
                                    {
                                        "uniqueId": "{{uniqueid}}",
                                        "id": "{{id}}",
                                        "title": "{{title}}",
                                        "campus": "{{campus}}",
                                        "periodCode": "{{period}}",
                                        "session": "{{session}}",
                                        "faculty": "{{faculty}}"
                                    }
                                {{/lastcourse}}
                            ],
                            "progfaculty": "{{progfaculty}}"
                        }
                    };
                    var dataPayload = JSON.stringify(payload);
                    script.setAttribute('data-prop-bot-name', 'York V3 Test');
                    script.setAttribute('data-prop-bot-id', '68d2eb2d-4f68-4812-a240-8cc76c6e8dd3'); <!-- TODO: get bot id and name -->
                    script.setAttribute('data-mount-app-id', 'chat');
                    script.setAttribute('data-mount', 'watsonchat');
                    script.setAttribute('data-prop-input-text-size', '13px');
                    script.setAttribute('data-prop-start-open', 'false');
                    script.setAttribute('data-prop-event-callback', 'handleChatChange');
                    script.setAttribute('data-prop-handle-bg', '#09AEEC');
                    script.setAttribute('data-prop-handle-fg', '#000000');
                    script.setAttribute('data-prop-brand-uri', '{{brand}}');
                    script.setAttribute('data-prop-api-key', '{{apikey}}');
                    script.setAttribute('data-prop-username', '{{moodleid}}');
                    script.setAttribute('data-prop-isglendon', '{{isglendon}}');
                    script.setAttribute('data-prop-payload', dataPayload);
                    script.src = "https://web-chat.global.assistant.watson.appdomain.cloud/versions/" + (window.watsonAssistantChatOptions.clientVersion || 'latest') + "/WatsonAssistantChatEntry.js";

                    document.head.appendChild(script);
                    initiateChat = true;

                    //create report button, then hide it so we can make it visible once we've observed a change in the chat div
                    var reportdiv = document.createElement('div');
                    reportdiv.setAttribute('id', 'watsonreport');
                    reportdiv.setAttribute('name', 'watsonreport');
                    var reportlink = document.createElement('a');
                    reportlink.setAttribute('target', '_blank');
                    reportlink.setAttribute('href', 'https://go.yorku.ca/sva1');
                    reportlink.innerHTML = 'Report an issue';
                    reportdiv.appendChild(reportlink);
                    $('#watsonchat').parent().append(reportdiv);
                    $('#watsonreport').hide();

                    //create new MutationObserver to watch for changes to the watsonchat element, once it detects a change, make the watsonreport div created earlier visible
                    var observer = new MutationObserver(function (mutations) {
                        $('#watsonreport').show();
                        observer.disconnect();
                    });
                    const targetNode = document.getElementById('watsonchat');
                    observer.observe(targetNode, {
                        childList: true
                    });
                }
                 </script>
             {{/headertext}}
            {{#js}}
                require(['theme_moove/watson'], function(mod) {
                mod.init();
                });
            {{/js}}
        </div>
    </div>
</div>
